# -*- coding: utf-8 -*-
"""VAR_File

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I0eZsc8liSqsUwCaoXTf5vit2fkSlYRK
"""

import yfinance as yf
import matplotlib.pyplot as plt
from scipy.stats import norm

def VaR(r, confidence, principal=1):

    alpha = 1 - confidence
    percentile = np.percentile(r, alpha * 100)
    out = principal * abs(percentile)
    return out

def percent_var(r, confidence):

    plt.hist(r, bins=50, alpha=0.75, density=True, label="Returns")
    plt.title("Histogram of Returns")
    plt.xlabel("Returns")
    plt.ylabel("Frequency")
    plt.legend()
    plt.show()

    alpha = 1 - confidence
    out = np.percentile(r, alpha * 100)


    return abs(out)


returns = np.random.normal(0, 1, 10000)
print("97.72th percentile of returns:", np.percentile(returns, 97.72))


r = np.random.normal(0.05, 0.03, 1000000)
probability2SD = norm.cdf(2)

my_confidence = probability2SD
my_percent_var = percent_var(r, my_confidence)
print("Calculated Percent VaR:", np.round(my_percent_var, 2))
print("Is the calculated Percent VaR approximately 0.01?", np.round(my_percent_var, 2) == 0.01)


var = VaR(r, my_confidence, principal)
print("Value at Risk (VaR) for principal $1000:", np.round(var, 2))

